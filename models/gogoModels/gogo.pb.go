// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gogo.proto

/*
	Package gogoModels is a generated protocol buffer package.

	It is generated from these files:
		gogo.proto

	It has these top-level messages:
		GogoProtoBufB
		GogoProtoBufA
*/
package gogoModels

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import binary "encoding/binary"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GogoProtoBufB struct {
	Location string `protobuf:"bytes,1,opt,name=Location,proto3" json:"Location,omitempty"`
}

func (m *GogoProtoBufB) Reset()                    { *m = GogoProtoBufB{} }
func (m *GogoProtoBufB) String() string            { return proto.CompactTextString(m) }
func (*GogoProtoBufB) ProtoMessage()               {}
func (*GogoProtoBufB) Descriptor() ([]byte, []int) { return fileDescriptorGogo, []int{0} }

func (m *GogoProtoBufB) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

type GogoProtoBufA struct {
	Name          string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BirthDay      int64          `protobuf:"varint,2,opt,name=birthDay,proto3" json:"birthDay,omitempty"`
	Phone         string         `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Siblings      int32          `protobuf:"varint,4,opt,name=siblings,proto3" json:"siblings,omitempty"`
	Spouse        bool           `protobuf:"varint,5,opt,name=spouse,proto3" json:"spouse,omitempty"`
	Money         float64        `protobuf:"fixed64,6,opt,name=money,proto3" json:"money,omitempty"`
	GogoProtoBufB *GogoProtoBufB `protobuf:"bytes,7,opt,name=gogoProtoBufB" json:"gogoProtoBufB,omitempty"`
}

func (m *GogoProtoBufA) Reset()                    { *m = GogoProtoBufA{} }
func (m *GogoProtoBufA) String() string            { return proto.CompactTextString(m) }
func (*GogoProtoBufA) ProtoMessage()               {}
func (*GogoProtoBufA) Descriptor() ([]byte, []int) { return fileDescriptorGogo, []int{1} }

func (m *GogoProtoBufA) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GogoProtoBufA) GetBirthDay() int64 {
	if m != nil {
		return m.BirthDay
	}
	return 0
}

func (m *GogoProtoBufA) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *GogoProtoBufA) GetSiblings() int32 {
	if m != nil {
		return m.Siblings
	}
	return 0
}

func (m *GogoProtoBufA) GetSpouse() bool {
	if m != nil {
		return m.Spouse
	}
	return false
}

func (m *GogoProtoBufA) GetMoney() float64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *GogoProtoBufA) GetGogoProtoBufB() *GogoProtoBufB {
	if m != nil {
		return m.GogoProtoBufB
	}
	return nil
}

func init() {
	proto.RegisterType((*GogoProtoBufB)(nil), "gogoModels.GogoProtoBufB")
	proto.RegisterType((*GogoProtoBufA)(nil), "gogoModels.GogoProtoBufA")
}
func (m *GogoProtoBufB) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GogoProtoBufB) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Location) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintGogo(dAtA, i, uint64(len(m.Location)))
		i += copy(dAtA[i:], m.Location)
	}
	return i, nil
}

func (m *GogoProtoBufA) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GogoProtoBufA) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintGogo(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.BirthDay != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintGogo(dAtA, i, uint64(m.BirthDay))
	}
	if len(m.Phone) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintGogo(dAtA, i, uint64(len(m.Phone)))
		i += copy(dAtA[i:], m.Phone)
	}
	if m.Siblings != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintGogo(dAtA, i, uint64(m.Siblings))
	}
	if m.Spouse {
		dAtA[i] = 0x28
		i++
		if m.Spouse {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Money != 0 {
		dAtA[i] = 0x31
		i++
		binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Money))))
		i += 8
	}
	if m.GogoProtoBufB != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintGogo(dAtA, i, uint64(m.GogoProtoBufB.Size()))
		n1, err := m.GogoProtoBufB.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	return i, nil
}

func encodeVarintGogo(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *GogoProtoBufB) Size() (n int) {
	var l int
	_ = l
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovGogo(uint64(l))
	}
	return n
}

func (m *GogoProtoBufA) Size() (n int) {
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovGogo(uint64(l))
	}
	if m.BirthDay != 0 {
		n += 1 + sovGogo(uint64(m.BirthDay))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovGogo(uint64(l))
	}
	if m.Siblings != 0 {
		n += 1 + sovGogo(uint64(m.Siblings))
	}
	if m.Spouse {
		n += 2
	}
	if m.Money != 0 {
		n += 9
	}
	if m.GogoProtoBufB != nil {
		l = m.GogoProtoBufB.Size()
		n += 1 + l + sovGogo(uint64(l))
	}
	return n
}

func sovGogo(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozGogo(x uint64) (n int) {
	return sovGogo(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GogoProtoBufB) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGogo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GogoProtoBufB: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GogoProtoBufB: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGogo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGogo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGogo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGogo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GogoProtoBufA) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGogo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GogoProtoBufA: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GogoProtoBufA: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGogo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGogo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BirthDay", wireType)
			}
			m.BirthDay = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGogo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BirthDay |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGogo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGogo
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Siblings", wireType)
			}
			m.Siblings = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGogo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Siblings |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spouse", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGogo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Spouse = bool(v != 0)
		case 6:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Money", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Money = float64(math.Float64frombits(v))
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GogoProtoBufB", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGogo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGogo
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GogoProtoBufB == nil {
				m.GogoProtoBufB = &GogoProtoBufB{}
			}
			if err := m.GogoProtoBufB.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGogo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGogo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGogo(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGogo
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGogo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGogo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthGogo
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowGogo
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipGogo(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthGogo = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGogo   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("gogo.proto", fileDescriptorGogo) }

var fileDescriptorGogo = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xcf, 0x4f, 0xcf,
	0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x02, 0xb3, 0x7d, 0xf3, 0x53, 0x52, 0x73, 0x8a, 0x95,
	0xb4, 0xb9, 0x78, 0xdd, 0xf3, 0xd3, 0xf3, 0x03, 0x40, 0x12, 0x4e, 0xa5, 0x69, 0x4e, 0x42, 0x52,
	0x5c, 0x1c, 0x3e, 0xf9, 0xc9, 0x89, 0x25, 0x99, 0xf9, 0x79, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c,
	0x41, 0x70, 0xbe, 0xd2, 0x03, 0x46, 0x54, 0xd5, 0x8e, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9,
	0xa9, 0x50, 0x95, 0x60, 0x36, 0xc8, 0x84, 0xa4, 0xcc, 0xa2, 0x92, 0x0c, 0x97, 0xc4, 0x4a, 0x09,
	0x26, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x38, 0x5f, 0x48, 0x84, 0x8b, 0xb5, 0x20, 0x23, 0x3f, 0x2f,
	0x55, 0x82, 0x19, 0xac, 0x01, 0xc2, 0x01, 0xe9, 0x28, 0xce, 0x4c, 0xca, 0xc9, 0xcc, 0x4b, 0x2f,
	0x96, 0x60, 0x51, 0x60, 0xd4, 0x60, 0x0d, 0x82, 0xf3, 0x85, 0xc4, 0xb8, 0xd8, 0x8a, 0x0b, 0xf2,
	0x4b, 0x8b, 0x53, 0x25, 0x58, 0x15, 0x18, 0x35, 0x38, 0x82, 0xa0, 0x3c, 0x90, 0x49, 0xb9, 0xf9,
	0x79, 0xa9, 0x95, 0x12, 0x6c, 0x0a, 0x8c, 0x1a, 0x8c, 0x41, 0x10, 0x8e, 0x90, 0x3d, 0x17, 0x6f,
	0x3a, 0xb2, 0x77, 0x24, 0xd8, 0x15, 0x18, 0x35, 0xb8, 0x8d, 0x24, 0xf5, 0x10, 0x5e, 0xd6, 0x43,
	0xf1, 0x6f, 0x10, 0xaa, 0x7a, 0x27, 0x81, 0x13, 0x8f, 0xe4, 0x18, 0x2f, 0x3c, 0x92, 0x63, 0x7c,
	0xf0, 0x48, 0x8e, 0x71, 0xc6, 0x63, 0x39, 0x86, 0x24, 0x36, 0x70, 0xa0, 0x19, 0x03, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x3f, 0x5c, 0x99, 0x16, 0x42, 0x01, 0x00, 0x00,
}
